{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/domuki/Documents/Project/Selfware/src/modules/UserClass.ts"],"sourcesContent":["// /models/user.ts\n\nexport default class UserClass {\n    id: string;\n    username: string;\n    email: string;\n    password: string;\n    contact?: string;\n    gender?: string;\n    dateOfBirth?: string;\n    bio?: string;\n\n    constructor(\n        id: string,\n        username: string,\n        email: string,\n        password: string,\n        contact?: string,\n        gender?: string,\n        dateOfBirth?: string,\n        bio?: string\n    ) {\n        this.id = id;\n        this.username = username;\n        this.email = email;\n        this.password = password;\n        this.contact = contact;\n        this.gender = gender;\n        this.dateOfBirth = dateOfBirth;\n        this.bio = bio;\n    }\n\n    // Method to convert the instance to JSON\n    toJson(): object {\n        return {\n            id: this.id,\n            username: this.username,\n            email: this.email,\n            password: this.password,\n            contact: this.contact,\n            gender: this.gender,\n            dateOfBirth: this.dateOfBirth,\n            bio: this.bio,\n        };\n    }\n\n    // Static method to create an instance from JSON\n    static fromJson(json: any): UserClass {\n        return new UserClass(\n            json.id,\n            json.username,\n            json.email,\n            json.password,\n            json.contact,\n            json.gender,\n            json.dateOfBirth,\n            json.bio\n        );\n    }\n}\n"],"names":[],"mappings":"AAAA,kBAAkB;;;;AAEH,MAAM;IACjB,GAAW;IACX,SAAiB;IACjB,MAAc;IACd,SAAiB;IACjB,QAAiB;IACjB,OAAgB;IAChB,YAAqB;IACrB,IAAa;IAEb,YACI,EAAU,EACV,QAAgB,EAChB,KAAa,EACb,QAAgB,EAChB,OAAgB,EAChB,MAAe,EACf,WAAoB,EACpB,GAAY,CACd;QACE,IAAI,CAAC,EAAE,GAAG;QACV,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,GAAG,GAAG;IACf;IAEA,yCAAyC;IACzC,SAAiB;QACb,OAAO;YACH,IAAI,IAAI,CAAC,EAAE;YACX,UAAU,IAAI,CAAC,QAAQ;YACvB,OAAO,IAAI,CAAC,KAAK;YACjB,UAAU,IAAI,CAAC,QAAQ;YACvB,SAAS,IAAI,CAAC,OAAO;YACrB,QAAQ,IAAI,CAAC,MAAM;YACnB,aAAa,IAAI,CAAC,WAAW;YAC7B,KAAK,IAAI,CAAC,GAAG;QACjB;IACJ;IAEA,gDAAgD;IAChD,OAAO,SAAS,IAAS,EAAa;QAClC,OAAO,IAAI,UACP,KAAK,EAAE,EACP,KAAK,QAAQ,EACb,KAAK,KAAK,EACV,KAAK,QAAQ,EACb,KAAK,OAAO,EACZ,KAAK,MAAM,EACX,KAAK,WAAW,EAChB,KAAK,GAAG;IAEhB;AACJ"}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file:///Users/domuki/Documents/Project/Selfware/src/utils/LocalStorage.ts"],"sourcesContent":["const LocalStorage = () => {\n  // Function to set an item in localStorage\n  const setAttribute = async (\n    name: string,\n    value: string\n  ): Promise<boolean> => {\n    try {\n      localStorage.setItem(name, value);\n      console.log(`Set ${name}: ${value} in localStorage`);\n      return true;\n    } catch (error) {\n      console.error(`Failed to set ${name} in localStorage:`, error);\n      return false;\n    }\n  };\n\n  // Function to remove an item from localStorage\n  const removeAttribute = async (name: string): Promise<boolean> => {\n    try {\n      localStorage.removeItem(name);\n      console.log(`Removed ${name} from localStorage`);\n      return true;\n    } catch (error) {\n      console.error(`Failed to remove ${name} from localStorage:`, error);\n      return false;\n    }\n  };\n\n  // Function to get an item from localStorage\n  const getAttribute = (name: string) => {\n    try {\n      const value = localStorage.getItem(name);\n\n      if (value === null) {\n        console.log(`No value found for ${name} in localStorage.`);\n        return null; // 没有找到对应的值时返回null\n      }\n\n      return JSON.parse(value); // 解析并返回JSON对象\n    } catch (error) {\n      console.error(`Failed to retrieve ${name} from localStorage:`, error);\n      return null; // 若解析失败，则返回null\n    }\n  };\n  return {\n    setAttribute,\n    getAttribute,\n    removeAttribute,\n  };\n};\nexport default LocalStorage;\n"],"names":[],"mappings":";;;AAAA,MAAM,eAAe;IACnB,0CAA0C;IAC1C,MAAM,eAAe,OACnB,MACA;QAEA,IAAI;YACF,aAAa,OAAO,CAAC,MAAM;YAC3B,QAAQ,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,MAAM,gBAAgB,CAAC;YACnD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,cAAc,EAAE,KAAK,iBAAiB,CAAC,EAAE;YACxD,OAAO;QACT;IACF;IAEA,+CAA+C;IAC/C,MAAM,kBAAkB,OAAO;QAC7B,IAAI;YACF,aAAa,UAAU,CAAC;YACxB,QAAQ,GAAG,CAAC,CAAC,QAAQ,EAAE,KAAK,kBAAkB,CAAC;YAC/C,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,iBAAiB,EAAE,KAAK,mBAAmB,CAAC,EAAE;YAC7D,OAAO;QACT;IACF;IAEA,4CAA4C;IAC5C,MAAM,eAAe,CAAC;QACpB,IAAI;YACF,MAAM,QAAQ,aAAa,OAAO,CAAC;YAEnC,IAAI,UAAU,MAAM;gBAClB,QAAQ,GAAG,CAAC,CAAC,mBAAmB,EAAE,KAAK,iBAAiB,CAAC;gBACzD,OAAO,MAAM,kBAAkB;YACjC;YAEA,OAAO,KAAK,KAAK,CAAC,QAAQ,cAAc;QAC1C,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,mBAAmB,EAAE,KAAK,mBAAmB,CAAC,EAAE;YAC/D,OAAO,MAAM,gBAAgB;QAC/B;IACF;IACA,OAAO;QACL;QACA;QACA;IACF;AACF;uCACe"}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///Users/domuki/Documents/Project/Selfware/src/utils/auth.ts"],"sourcesContent":["import UserClass from \"@/modules/UserClass\";\nimport LocalStorage from \"@/utils/LocalStorage\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst API_ROUTES = {\n    SIGN_IN: \"/api/auth/sign_in\",\n    LOGOUT: \"/api/auth/logout\",\n};\n\n/**\n * Handles the user sign-in process by sending a POST request to the authentication API.\n */\nexport async function signIn(email: string, password: string): Promise<boolean> {\n    const dataOfSubmit = { email, password };\n    try {\n        const res = await fetch(API_ROUTES.SIGN_IN, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(dataOfSubmit),\n        });\n\n        const contentType = res.headers.get(\"Content-Type\");\n        let data;\n\n        if (contentType && contentType.includes(\"application/json\")) {\n            data = await res.json();\n        } else {\n            data = await res.text();\n            console.error(\"Unexpected response:\", data);\n        }\n\n        if (res.ok) {\n            const dataOfUser = UserClass.fromJson(data.user);\n            LocalStorage().setAttribute(\"DATA:USER\", JSON.stringify(dataOfUser.toJson()));\n            toast.success(\"You have logged in successfully!\");\n            setTimeout(() => {\n                window.location.href = \"/dashboard\"; // Redirect to sign-in page\n            }, 2000);\n            return true;\n        } else {\n            if (res.status === 401) {\n                toast.error(\"Invalid email or password.\");\n            } else {\n                toast.error(\"Login failed. Please try again.\");\n            }\n            console.log(data.error || \"Login failed\");\n            return false;\n        }\n    } catch (error) {\n        console.error(\"An error occurred during sign-in:\", error);\n        toast.error(\"An unexpected error occurred.\");\n        return false;\n    }\n}\n\n/**\n * Handles the user sign-out process by sending a POST request to the logout API.\n */\nexport async function signUp(id: string,\n    username: string,\n    email: string,\n    password: string,\n    contact: string,\n    gender: string,\n    dateOfBirth: string,\n    bio: string): Promise<boolean> {\n\n    try {\n\n        // Create a new User object\n        const newUser = new UserClass(\n            '',\n            username,\n            email,\n            password,\n            contact,\n            gender,\n            dateOfBirth,\n            bio\n        );\n\n        // Submit the hashed password and other details\n        const res = await fetch('/api/auth/sign_up', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(newUser.toJson()),\n        });\n\n        const data = await res.json();\n\n        if (res.ok) {\n            toast.success('Registration successful!');\n            setTimeout(() => {\n                window.location.href = \"/sign_in\"; // Redirect to sign-in page\n            }, 2000);\n            return true;\n        } else {\n            toast.error(data.error || 'An error occurred!');\n            return false;\n        }\n    } catch (error: unknown) {\n        if (error instanceof Error) {\n            toast.error('An error occurred: ' + error.message);\n        } else {\n            toast.error('An unexpected error occurred');\n        }\n        return false;\n    }\n};\n\n/**\n * Handles the user sign-out process by sending a POST request to the logout API.\n */\nexport async function signOut(): Promise<void> {\n    try {\n        const res = await fetch(API_ROUTES.LOGOUT, {\n            method: \"POST\",\n            credentials: \"include\",\n        });\n\n        if (res.ok) {\n            LocalStorage().removeAttribute(\"DATA:USER\");\n            toast.success(\"You have logged out successfully!\");\n        } else {\n            toast.error(\"Logout failed. Please try again.\");\n        }\n\n        setTimeout(() => {\n            window.location.href = \"/sign_in\"; // Redirect to sign-in page\n        }, 2000);\n    } catch (error) {\n        console.error(\"Error during logout:\", error);\n        toast.error(\"An unexpected error occurred.\");\n        setTimeout(() => {\n            window.location.href = \"/sign_in\"; // Fallback redirect\n        }, 2000);\n    }\n}\n\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///Users/domuki/Documents/Project/Selfware/src/components/LogoutButton.tsx"],"sourcesContent":["import LocalStorage from \"@/utils/LocalStorage\";\nimport React, { useState } from \"react\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { signOut } from \"@/utils/auth\";\n\nexport default function LogoutButton() {\n  const [showConfirm, setShowConfirm] = useState(false);\n\n  return (\n    <>\n      <button\n        onClick={() => setShowConfirm(true)}\n        className=\"hover:bg-red-600 hover:text-white text-red-400 px-4 py-2 rounded-md font-medium transition duration-200 border border-red-400\"\n      >\n        Logout\n      </button>\n\n      {showConfirm && (\n        <div className=\"flex items-center justify-center bg-black-white-10 fixed h-screen w-full inset-0 backdrop-blur-xs z-50\">\n          <div className=\"w-1/3 bg-black-white backdrop-blur-md p-6 rounded-xl shadow-lg\">\n            <p className=\"mb-4\">Are you sure you want to logout?</p>\n            <div className=\"flex justify-between space-x-4\">\n              <button\n                onClick={() => setShowConfirm(false)}\n                className=\"px-2 py-1 rounded-md\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={signOut}\n                className=\"hover:bg-red-600 hover:text-white text-red-600 border border-red-600 px-2 py-1 rounded-md\"\n              >\n                Confirm\n              </button>\n            </div>\n          </div>\n          <ToastContainer />\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;;;;;;AAEe,SAAS;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,qBACE;;0BACE,8OAAC;gBACC,SAAS,IAAM,eAAe;gBAC9B,WAAU;0BACX;;;;;;YAIA,6BACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;0CAAO;;;;;;0CACpB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,SAAS,IAAM,eAAe;wCAC9B,WAAU;kDACX;;;;;;kDAGD,8OAAC;wCACC,SAAS,oHAAA,CAAA,UAAO;wCAChB,WAAU;kDACX;;;;;;;;;;;;;;;;;;kCAKL,8OAAC,mJAAA,CAAA,iBAAc;;;;;;;;;;;;;AAKzB"}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":["file:///Users/domuki/Documents/Project/Selfware/src/components/Navbar.tsx"],"sourcesContent":["\"use client\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport LogoutButton from \"./LogoutButton\";\nimport LocalStorage from \"@/utils/LocalStorage\";\nimport UserClass from \"@/modules/UserClass\";\n// If you're using React Router, import `useNavigate` from \"react-router-dom\".\n\nconst Navbar: React.FC = () => {\n  const router = useRouter(); // Next.js router instance\n  // const [isLoading, setIsLoading] = useState(true); // Loading state\n  const [userData, setUserData] = useState<UserClass>(); // User data\n\n  useEffect(() => {\n    try {\n      const storedData = localStorage.getItem(\"DATA:USER\");\n      if (storedData) {\n        const parsedData = JSON.parse(storedData);\n        console.log(parsedData);\n        setUserData(UserClass.fromJson(parsedData));\n      }\n    } catch (error) {}\n  }, []);\n\n  // Function to perform navigation\n  const navigate = (path: string) => {\n    router.push(path); // Navigate to the given path\n  };\n\n  return (\n    <nav className=\"bg-black-white-10 backdrop-blur-sm py-4 px-6 fixed top-0 left-0 w-full z-40\">\n      <div className=\"flex items-center justify-between max-w-7xl mx-auto\">\n        {/* Title */}\n        <span\n          className=\"text-3xl font-bold cursor-pointer text-yellow-500\"\n          onClick={() => navigate(\"/\")}\n        >\n          iSolar\n        </span>\n\n        {/* Navigation Links */}\n        <div className=\"flex space-x-6\">\n          <button\n            className=\"hover:text-yellow-400 transition\"\n            onClick={() => navigate(\"/dashboard\")}\n          >\n            Solar Status\n          </button>\n          <button\n            className=\"hover:text-yellow-400 transition\"\n            onClick={() => navigate(\"/solar-panels\")}\n          >\n            Solar Panels\n          </button>\n          <button\n            className=\"hover:text-yellow-400 transition\"\n            onClick={() => navigate(\"/solar-orbits\")}\n          >\n            Solar Orbits\n          </button>\n        </div>\n\n        {/* Logout Button */}\n        <div>\n          {userData ? (\n            <LogoutButton />\n          ) : (\n            // <LogoutButton />\n            <button\n              className=\"btn btn-signin\"\n              onClick={() => navigate(\"/sign_in\")}\n            >\n              Sign In\n            </button>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAEA;AALA;;;;;;AAMA,8EAA8E;AAE9E,MAAM,SAAmB;IACvB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD,KAAK,0BAA0B;IACtD,qEAAqE;IACrE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,KAAgB,YAAY;IAEnE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI;YACF,MAAM,aAAa,aAAa,OAAO,CAAC;YACxC,IAAI,YAAY;gBACd,MAAM,aAAa,KAAK,KAAK,CAAC;gBAC9B,QAAQ,GAAG,CAAC;gBACZ,YAAY,2HAAA,CAAA,UAAS,CAAC,QAAQ,CAAC;YACjC;QACF,EAAE,OAAO,OAAO,CAAC;IACnB,GAAG,EAAE;IAEL,iCAAiC;IACjC,MAAM,WAAW,CAAC;QAChB,OAAO,IAAI,CAAC,OAAO,6BAA6B;IAClD;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBACC,WAAU;oBACV,SAAS,IAAM,SAAS;8BACzB;;;;;;8BAKD,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,WAAU;4BACV,SAAS,IAAM,SAAS;sCACzB;;;;;;sCAGD,8OAAC;4BACC,WAAU;4BACV,SAAS,IAAM,SAAS;sCACzB;;;;;;sCAGD,8OAAC;4BACC,WAAU;4BACV,SAAS,IAAM,SAAS;sCACzB;;;;;;;;;;;;8BAMH,8OAAC;8BACE,yBACC,8OAAC,kIAAA,CAAA,UAAY;;;;+BAEb,mBAAmB;kCACnB,8OAAC;wBACC,WAAU;wBACV,SAAS,IAAM,SAAS;kCACzB;;;;;;;;;;;;;;;;;;;;;;AAQb;uCAEe"}},
    {"offset": {"line": 468, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}