{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/domuki/Documents/Project/Selfware/src/components/StarBackground.tsx"],"sourcesContent":["// src/app/test/page.tsx\n\"use client\";\n\nimport { useEffect, useRef, useState } from \"react\";\n\nconst StarBackground: React.FC = () => {\n\n  const canvasRef = useRef<HTMLCanvasElement | null>(null); // Canvas reference\n  // Get CSS variables for background and foreground\n  const rootStyles = getComputedStyle(document.documentElement);\n  const background =\n    rootStyles.getPropertyValue(\"--background\").trim() || \"defaultBackground\"; // Fallback value\n  const foreground =\n    rootStyles.getPropertyValue(\"--foreground\").trim() || \"defaultForeground\"; // Fallback value\n  // Background animation (stars)\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n\n    const stars: { x: number; y: number; radius: number }[] = [];\n    const numStars = 200;\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    // Generate stars\n    for (let i = 0; i < numStars; i++) {\n      stars.push({\n        x: Math.random() * canvas.width,\n        y: Math.random() * canvas.height,\n        radius: Math.random() * 2,\n      });\n    }\n\n    const drawStars = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.fillStyle = foreground;\n      stars.forEach((star) => {\n        ctx.beginPath();\n        ctx.arc(star.x, star.y, star.radius, 0, Math.PI * 2);\n        ctx.fill();\n      });\n    };\n\n    const updateStars = () => {\n      stars.forEach((star) => {\n        star.y += 0.5;\n        if (star.y > canvas.height) {\n          star.y = 0;\n          star.x = Math.random() * canvas.width;\n        }\n      });\n    };\n\n    const animate = () => {\n      drawStars();\n      updateStars();\n      requestAnimationFrame(animate);\n    };\n\n    animate();\n\n    // Handle resizing\n    const handleResize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  return (\n    <>\n      <canvas\n        ref={canvasRef}\n        className=\"absolute top-0 left-0 w-full h-full -z-10\"\n      ></canvas>\n    </>\n  );\n};\n\nexport default StarBackground;\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;;AAGxB;AAFA;;;AAIA,MAAM,iBAA2B;IAE/B,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAA4B,OAAO,mBAAmB;IAC7E,kDAAkD;IAClD,MAAM,aAAa,iBAAiB,SAAS,eAAe;IAC5D,MAAM,aACJ,WAAW,gBAAgB,CAAC,gBAAgB,IAAI,MAAM,qBAAqB,iBAAiB;IAC9F,MAAM,aACJ,WAAW,gBAAgB,CAAC,gBAAgB,IAAI,MAAM,qBAAqB,iBAAiB;IAC9F,+BAA+B;IAE/B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,SAAS,UAAU,OAAO;QAChC,IAAI,CAAC,QAAQ;QAEb,MAAM,MAAM,OAAO,UAAU,CAAC;QAC9B,IAAI,CAAC,KAAK;QAEV,MAAM,QAAoD,EAAE;QAC5D,MAAM,WAAW;QAEjB,OAAO,KAAK,GAAG,OAAO,UAAU;QAChC,OAAO,MAAM,GAAG,OAAO,WAAW;QAElC,iBAAiB;QACjB,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,IAAK;YACjC,MAAM,IAAI,CAAC;gBACT,GAAG,KAAK,MAAM,KAAK,OAAO,KAAK;gBAC/B,GAAG,KAAK,MAAM,KAAK,OAAO,MAAM;gBAChC,QAAQ,KAAK,MAAM,KAAK;YAC1B;QACF;QAEA,MAAM,YAAY;YAChB,IAAI,SAAS,CAAC,GAAG,GAAG,OAAO,KAAK,EAAE,OAAO,MAAM;YAC/C,IAAI,SAAS,GAAG;YAChB,MAAM,OAAO,CAAC,CAAC;gBACb,IAAI,SAAS;gBACb,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,MAAM,EAAE,GAAG,KAAK,EAAE,GAAG;gBAClD,IAAI,IAAI;YACV;QACF;QAEA,MAAM,cAAc;YAClB,MAAM,OAAO,CAAC,CAAC;gBACb,KAAK,CAAC,IAAI;gBACV,IAAI,KAAK,CAAC,GAAG,OAAO,MAAM,EAAE;oBAC1B,KAAK,CAAC,GAAG;oBACT,KAAK,CAAC,GAAG,KAAK,MAAM,KAAK,OAAO,KAAK;gBACvC;YACF;QACF;QAEA,MAAM,UAAU;YACd;YACA;YACA,sBAAsB;QACxB;QAEA;QAEA,kBAAkB;QAClB,MAAM,eAAe;YACnB,OAAO,KAAK,GAAG,OAAO,UAAU;YAChC,OAAO,MAAM,GAAG,OAAO,WAAW;QACpC;QAEA,OAAO,gBAAgB,CAAC,UAAU;QAElC,OAAO;YACL,OAAO,mBAAmB,CAAC,UAAU;QACvC;IACF,GAAG,EAAE;IAEL,qBACE;kBACE,cAAA,8OAAC;YACC,KAAK;YACL,WAAU;;;;;;;AAIlB;uCAEe"}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///Users/domuki/Documents/Project/Selfware/src/components/StarComponent.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"@/app/styles/star-styles.css\";\n\ninterface StarComponentProps {\n  lifePercentage: number; // Ensure this prop is defined\n  sizeChange: boolean;\n}\n\nconst StarComponent: React.FC<StarComponentProps> = ({\n  lifePercentage,\n  sizeChange,\n}) => {\n  const emoji = [\"▔＾▔\", \"▔▽▔\", \"▔皿▔\", \"▔︵▔\", \"▔ω▔\", \"▔﹏▔\"];\n  const starProperties = [\n    {\n      name: \"I: Protostar\",\n      color: \"rgba(222, 0, 0, 1)\", // Red\n      glow: `rgba(255, 100, 100, 0.5)`,\n      size: 150, // Small\n    },\n    {\n      name: \"II: Main sequence\",\n      color: \"rgba(222, 222, 0, 1)\", // Yellow\n      glow: `rgba(255, 255, 100, 0.5)`,\n      size: 250, // Medium\n    },\n    {\n      name: \"III: Red giant\",\n      color: \"rgba(222, 100, 100, 1)\", // Red\n      glow: `rgba(255, 100, 100, 0.5)`,\n      size: 500, // Very large\n    },\n    {\n      name: \"IV. White dwarf\",\n      color: \"rgba(200, 200, 255, 1)\", // Blue-white\n      glow: `rgba(200, 200, 255, 0.5)`,\n      size: 200, // Small\n    },\n    {\n      name: \"VI. Black dwarf\",\n      color: \"rgba(0, 0, 0, 1)\", // Black\n      glow: \"rgba(100, 100, 100, 1)\",\n      size: 150, // Smallest\n    },\n  ];\n\n  const getStarIndex = (percentage: number) => {\n    if (percentage > 75) return 0; // Protostar\n    else if (percentage > 50) return 1; // Main sequence\n    else if (percentage > 25) return 2; // Red giant\n    else if (percentage > 1) return 3; // White dwarf\n    else return 4; // Black dwarf\n  };\n\n  const currentStarProperties = starProperties[getStarIndex(lifePercentage)];\n\n  return (\n    <div\n      className=\"star w-10 h-10\"\n      style={\n        sizeChange\n          ? {\n              backgroundColor: currentStarProperties.color,\n              width: `${currentStarProperties.size}px`,\n              height: `${currentStarProperties.size}px`,\n            }\n          : {\n              backgroundColor: currentStarProperties.color,\n            }\n      }\n    >\n      {/* <div\n        className={`absolut emoji flex items-center justify-center w-full h-full`}\n        style={{ fontSize: `${currentStarProperties.size / 5}px` }}\n      >\n        <div className=\"mt-8\">▔＾▔</div>\n      </div> */}\n      <div\n        className=\"glow\"\n        style={{\n          backgroundColor: currentStarProperties.glow,\n          width: \"150%\", // Glow width\n          height: \"150%\", // Glow height\n          opacity: 0.5, // Set opacity\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default StarComponent;\n"],"names":[],"mappings":";;;;;;AAQA,MAAM,gBAA8C,CAAC,EACnD,cAAc,EACd,UAAU,EACX;IACC,MAAM,QAAQ;QAAC;QAAO;QAAO;QAAO;QAAO;QAAO;KAAM;IACxD,MAAM,iBAAiB;QACrB;YACE,MAAM;YACN,OAAO;YACP,MAAM,CAAC,wBAAwB,CAAC;YAChC,MAAM;QACR;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM,CAAC,wBAAwB,CAAC;YAChC,MAAM;QACR;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM,CAAC,wBAAwB,CAAC;YAChC,MAAM;QACR;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM,CAAC,wBAAwB,CAAC;YAChC,MAAM;QACR;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,MAAM;QACR;KACD;IAED,MAAM,eAAe,CAAC;QACpB,IAAI,aAAa,IAAI,OAAO,GAAG,YAAY;aACtC,IAAI,aAAa,IAAI,OAAO,GAAG,gBAAgB;aAC/C,IAAI,aAAa,IAAI,OAAO,GAAG,YAAY;aAC3C,IAAI,aAAa,GAAG,OAAO,GAAG,cAAc;aAC5C,OAAO,GAAG,cAAc;IAC/B;IAEA,MAAM,wBAAwB,cAAc,CAAC,aAAa,gBAAgB;IAE1E,qBACE,8OAAC;QACC,WAAU;QACV,OACE,aACI;YACE,iBAAiB,sBAAsB,KAAK;YAC5C,OAAO,GAAG,sBAAsB,IAAI,CAAC,EAAE,CAAC;YACxC,QAAQ,GAAG,sBAAsB,IAAI,CAAC,EAAE,CAAC;QAC3C,IACA;YACE,iBAAiB,sBAAsB,KAAK;QAC9C;kBASN,cAAA,8OAAC;YACC,WAAU;YACV,OAAO;gBACL,iBAAiB,sBAAsB,IAAI;gBAC3C,OAAO;gBACP,QAAQ;gBACR,SAAS;YACX;;;;;;;;;;;AAIR;uCAEe"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///Users/domuki/Documents/Project/Selfware/src/components/OrbitDemo.tsx"],"sourcesContent":["\"use client\";\n\nimport { Planet } from \"@/app/solar-orbits/page\";\nimport StarComponent from \"./StarComponent\";\nimport \"@/app/styles/solar-system.css\";\n\ninterface OrbitDemoProps {\n  planets: Planet[];\n  lifePercentage: number;\n}\n\nconst OrbitDemo: React.FC<OrbitDemoProps> = ({ planets, lifePercentage }) => {\n  return (\n    <>\n      <div className=\"space\">\n        {/* Sun */}\n\n        <StarComponent lifePercentage={lifePercentage} sizeChange={false} />\n\n        {/* Planets and Orbits */}\n        {planets.map((planet, index) => (\n          <div\n            key={planet.name}\n            className=\"orbit\"\n            style={{\n              width: `${planet.distance * 2}px`,\n              height: `${planet.distance * 2}px`,\n              animationDuration: `${10 + index * 4}s`,\n              zIndex: `${planets.length - index}`,\n            }}\n          >\n            <div\n              className=\"planet hover:cursor-pointer hover:p-5 \"\n              style={{\n                width: `${planet.size}px`,\n                height: `${planet.size}px`,\n                backgroundColor: planet.color,\n              }}\n            ></div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\nexport default OrbitDemo;\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;;AAWA,MAAM,YAAsC,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE;IACtE,qBACE;kBACE,cAAA,8OAAC;YAAI,WAAU;;8BAGb,8OAAC,mIAAA,CAAA,UAAa;oBAAC,gBAAgB;oBAAgB,YAAY;;;;;;gBAG1D,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,8OAAC;wBAEC,WAAU;wBACV,OAAO;4BACL,OAAO,GAAG,OAAO,QAAQ,GAAG,EAAE,EAAE,CAAC;4BACjC,QAAQ,GAAG,OAAO,QAAQ,GAAG,EAAE,EAAE,CAAC;4BAClC,mBAAmB,GAAG,KAAK,QAAQ,EAAE,CAAC,CAAC;4BACvC,QAAQ,GAAG,QAAQ,MAAM,GAAG,OAAO;wBACrC;kCAEA,cAAA,8OAAC;4BACC,WAAU;4BACV,OAAO;gCACL,OAAO,GAAG,OAAO,IAAI,CAAC,EAAE,CAAC;gCACzB,QAAQ,GAAG,OAAO,IAAI,CAAC,EAAE,CAAC;gCAC1B,iBAAiB,OAAO,KAAK;4BAC/B;;;;;;uBAfG,OAAO,IAAI;;;;;;;;;;;;AAsB5B;uCACe"}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///Users/domuki/Documents/Project/Selfware/src/components/LoadingPage.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface LoadingPageProps {\n  processing: number; // Progress percentage (0–100)\n}\n\nconst LoadingPage: React.FC<LoadingPageProps> = ({ processing }) => {\n  return (\n    <div className=\"h-screen flex flex-col items-center justify-center opening-bg\">\n      {/* \"LOADING\" Text */}\n      <span className=\"text-6xl text-white mb-6\">LOADING</span>\n\n      {/* Processing Bar */}\n      <div className=\"w-1/2 h-4 border-2 border-white rounded-full overflow-hidden\">\n        <div\n          className=\"h-full bg-white transition-all duration-150\"\n          style={{ width: `${processing}%` }} // Set width dynamically\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingPage;\n"],"names":[],"mappings":";;;;;AAMA,MAAM,cAA0C,CAAC,EAAE,UAAU,EAAE;IAC7D,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAK,WAAU;0BAA2B;;;;;;0BAG3C,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,WAAU;oBACV,OAAO;wBAAE,OAAO,GAAG,WAAW,CAAC,CAAC;oBAAC;;;;;;;;;;;;;;;;;AAK3C;uCAEe"}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":["file:///Users/domuki/Documents/Project/Selfware/src/app/solar-orbits/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect } from \"react\";\nimport UserClass from \"@/modules/UserClass\";\nimport LoadingCircle from \"@/components/LoadingCircle\";\nimport StarBackground from \"@/components/StarBackground\";\nimport OrbitDemo from \"@/components/OrbitDemo\";\nimport LoadingPage from \"@/components/LoadingPage\";\n\nexport interface Planet {\n  name: string;\n  size: number;\n  distance: number;\n  color: string;\n}\n\nconst SolarOrbits: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [userData, setUserData] = useState<UserClass>();\n  const [birthDate, setBirthDate] = useState(\"\"); // User's birth date\n  const [lifePercentage, setLifePercentage] = useState(100); // Remaining life percentage\n  const [planets, setPlanets] = useState<Planet[]>([]);\n  const totalDays = 30000; // Assumed star lifespan in days\n  const [processing, setProcessing] = useState(0); \n  // useEffect(() => {\n  //   const fetchUserData = () => {\n  //     try {\n  //       const storedData = localStorage.getItem(\"DATA:USER\");\n  //       if (storedData) {\n  //         const parsedData = JSON.parse(storedData);\n  //         setUserData(UserClass.fromJson(parsedData));\n  //         setPlanets(examples);\n  //       }\n  //     } catch (error) {\n  //       console.log(\"error on userdata\");\n  //     }\n  //   };\n  //   setTimeout(fetchUserData, 1500);\n  // }, []);\n  useEffect(() => {\n    const fetchUserData = () => {\n      try {\n        const storedData = localStorage.getItem(\"DATA:USER\");\n        if (storedData) {\n          const parsedData = JSON.parse(storedData);\n          setUserData(UserClass.fromJson(parsedData));\n          setPlanets(examples);\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      } finally {\n        setIsLoading(false); // Stop loading after fetching data\n      }\n    };\n\n    // Simulate progress over 1500ms\n    const totalDuration = 1500; // Total time for loading (in ms)\n    const intervalDuration = 100; // Interval time for updating progress (in ms)\n    const increment = 100 / (totalDuration / intervalDuration); // Calculate increment per interval\n\n    const interval = setInterval(() => {\n      setProcessing((prev) => {\n        const nextValue = prev + increment;\n        if (nextValue >= 100) {\n          clearInterval(interval); // Stop interval when progress reaches 100%\n          return 100;\n        }\n        return nextValue;\n      });\n    }, intervalDuration);\n\n    // Fetch user data after 1500ms\n    const timeout = setTimeout(() => {\n      fetchUserData(); // Fetch user data\n    }, totalDuration);\n\n    // Cleanup intervals and timeouts on component unmount\n    return () => {\n      clearInterval(interval);\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  // Update birth date and loading state when user data is loaded\n  useEffect(() => {\n    if (userData) {\n      console.log(userData.toJson());\n      setBirthDate(userData.dateOfBirth || \"\");\n      setIsLoading(false); // Mark loading as complete\n    }\n  }, [userData]);\n\n  // Calculate remaining life percentage\n  useEffect(() => {\n    if (birthDate) {\n      const birth = new Date(birthDate);\n      const today = new Date();\n      const daysLived = Math.floor(\n        (today.getTime() - birth.getTime()) / (1000 * 60 * 60 * 24)\n      );\n      const remainingPercentage = Math.max(\n        0,\n        ((totalDays - daysLived) / totalDays) * 100\n      );\n      setLifePercentage(remainingPercentage);\n      console.log(\"remainingPercentage\", remainingPercentage);\n    }\n  }, [birthDate]);\n\n  // size: values, distance: relationship strength, color: attitute\n\n  const examples = [\n    { name: \"Mercury\", size: 10, distance: 50, color: \"#b0b0b0\" },\n    { name: \"Venus\", size: 14, distance: 80, color: \"#fac569\" },\n    { name: \"Earth\", size: 16, distance: 110, color: \"#3c99dc\" },\n    { name: \"Mars\", size: 12, distance: 150, color: \"#d14b4b\" },\n    { name: \"Jupiter\", size: 30, distance: 200, color: \"#d4a759\" },\n    { name: \"Saturn\", size: 26, distance: 260, color: \"#edd79b\" },\n    { name: \"Uranus\", size: 20, distance: 320, color: \"#9ad7f6\" },\n    { name: \"Neptune\", size: 18, distance: 380, color: \"#6477d0\" },\n  ];\n\n  if (isLoading) {\n    return (\n      <LoadingPage processing={processing} />\n    );\n  } else\n    return (\n      <div className=\"flex\">\n        <StarBackground />\n        <div className=\"w-full h-screen\">\n          <OrbitDemo planets={planets} lifePercentage={lifePercentage} />\n        </div>\n      </div>\n    );\n};\n\nexport default SolarOrbits;\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AACA;AACA;AANA;;;;;;;AAeA,MAAM,cAAwB;IAC5B,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD;IACvC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,oBAAoB;IACpE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,4BAA4B;IACvF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACnD,MAAM,YAAY,OAAO,gCAAgC;IACzD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,oBAAoB;IACpB,kCAAkC;IAClC,YAAY;IACZ,8DAA8D;IAC9D,0BAA0B;IAC1B,qDAAqD;IACrD,uDAAuD;IACvD,gCAAgC;IAChC,UAAU;IACV,wBAAwB;IACxB,0CAA0C;IAC1C,QAAQ;IACR,OAAO;IACP,qCAAqC;IACrC,UAAU;IACV,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,gBAAgB;YACpB,IAAI;gBACF,MAAM,aAAa,aAAa,OAAO,CAAC;gBACxC,IAAI,YAAY;oBACd,MAAM,aAAa,KAAK,KAAK,CAAC;oBAC9B,YAAY,2HAAA,CAAA,UAAS,CAAC,QAAQ,CAAC;oBAC/B,WAAW;gBACb;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,6BAA6B;YAC7C,SAAU;gBACR,aAAa,QAAQ,mCAAmC;YAC1D;QACF;QAEA,gCAAgC;QAChC,MAAM,gBAAgB,MAAM,iCAAiC;QAC7D,MAAM,mBAAmB,KAAK,8CAA8C;QAC5E,MAAM,YAAY,MAAM,CAAC,gBAAgB,gBAAgB,GAAG,mCAAmC;QAE/F,MAAM,WAAW,YAAY;YAC3B,cAAc,CAAC;gBACb,MAAM,YAAY,OAAO;gBACzB,IAAI,aAAa,KAAK;oBACpB,cAAc,WAAW,2CAA2C;oBACpE,OAAO;gBACT;gBACA,OAAO;YACT;QACF,GAAG;QAEH,+BAA+B;QAC/B,MAAM,UAAU,WAAW;YACzB,iBAAiB,kBAAkB;QACrC,GAAG;QAEH,sDAAsD;QACtD,OAAO;YACL,cAAc;YACd,aAAa;QACf;IACF,GAAG,EAAE;IAEL,+DAA+D;IAC/D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,UAAU;YACZ,QAAQ,GAAG,CAAC,SAAS,MAAM;YAC3B,aAAa,SAAS,WAAW,IAAI;YACrC,aAAa,QAAQ,2BAA2B;QAClD;IACF,GAAG;QAAC;KAAS;IAEb,sCAAsC;IACtC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,WAAW;YACb,MAAM,QAAQ,IAAI,KAAK;YACvB,MAAM,QAAQ,IAAI;YAClB,MAAM,YAAY,KAAK,KAAK,CAC1B,CAAC,MAAM,OAAO,KAAK,MAAM,OAAO,EAAE,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE;YAE5D,MAAM,sBAAsB,KAAK,GAAG,CAClC,GACA,AAAC,CAAC,YAAY,SAAS,IAAI,YAAa;YAE1C,kBAAkB;YAClB,QAAQ,GAAG,CAAC,uBAAuB;QACrC;IACF,GAAG;QAAC;KAAU;IAEd,iEAAiE;IAEjE,MAAM,WAAW;QACf;YAAE,MAAM;YAAW,MAAM;YAAI,UAAU;YAAI,OAAO;QAAU;QAC5D;YAAE,MAAM;YAAS,MAAM;YAAI,UAAU;YAAI,OAAO;QAAU;QAC1D;YAAE,MAAM;YAAS,MAAM;YAAI,UAAU;YAAK,OAAO;QAAU;QAC3D;YAAE,MAAM;YAAQ,MAAM;YAAI,UAAU;YAAK,OAAO;QAAU;QAC1D;YAAE,MAAM;YAAW,MAAM;YAAI,UAAU;YAAK,OAAO;QAAU;QAC7D;YAAE,MAAM;YAAU,MAAM;YAAI,UAAU;YAAK,OAAO;QAAU;QAC5D;YAAE,MAAM;YAAU,MAAM;YAAI,UAAU;YAAK,OAAO;QAAU;QAC5D;YAAE,MAAM;YAAW,MAAM;YAAI,UAAU;YAAK,OAAO;QAAU;KAC9D;IAED,IAAI,WAAW;QACb,qBACE,8OAAC,iIAAA,CAAA,UAAW;YAAC,YAAY;;;;;;IAE7B,OACE,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,oIAAA,CAAA,UAAc;;;;;0BACf,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,+HAAA,CAAA,UAAS;oBAAC,SAAS;oBAAS,gBAAgB;;;;;;;;;;;;;;;;;AAIvD;uCAEe"}},
    {"offset": {"line": 483, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}