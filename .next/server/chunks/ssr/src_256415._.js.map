{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/domuki/Documents/Project/Selfware/src/components/GlassWindow.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface GlassWindowProps {\n  isOpen: boolean; // Whether the widget is open\n  onClose: () => void; // Function to close the widget\n  children: React.ReactNode; // Content to display inside the widget\n}\n\nconst GlassWindow: React.FC<GlassWindowProps> = ({ isOpen, onClose, children }) => {\n  if (!isOpen) return null; // Don't render if the widget is not open\n\n  return (\n    <div\n      className=\"bg-black-white-10 fixed h-full w-full inset-0 flex items-center justify-center backdrop-blur-xs z-50\"\n      onClick={onClose} // Close widget when clicking outside\n    >\n      <div\n        className=\"flex flex-col items-center justify-between w-1/3 bg-black-white-10 backdrop-blur-md p-6 rounded-xl shadow-lg\"\n        onClick={(e) => e.stopPropagation()} // Prevent closing when clicking inside\n      >\n        {children}\n        <button\n          className=\"mt-4 px-4 py-2 rounded-lg text-red-500 hover:bg-red-500 hover:text-white\"\n          onClick={onClose} // Close button\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default GlassWindow;\n"],"names":[],"mappings":";;;;;AAQA,MAAM,cAA0C,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE;IAC5E,IAAI,CAAC,QAAQ,OAAO,MAAM,yCAAyC;IAEnE,qBACE,8OAAC;QACC,WAAU;QACV,SAAS;kBAET,cAAA,8OAAC;YACC,WAAU;YACV,SAAS,CAAC,IAAM,EAAE,eAAe;;gBAEhC;8BACD,8OAAC;oBACC,WAAU;oBACV,SAAS;8BACV;;;;;;;;;;;;;;;;;AAMT;uCAEe"}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///Users/domuki/Documents/Project/Selfware/src/components/LoadingPage.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface LoadingPageProps {\n  processing: number; // Progress percentage (0–100)\n}\n\nconst LoadingPage: React.FC<LoadingPageProps> = ({ processing }) => {\n  return (\n    <div className=\"h-screen flex flex-col items-center justify-center opening-bg\">\n      {/* \"LOADING\" Text */}\n      <span className=\"text-6xl text-white mb-6\">LOADING</span>\n\n      {/* Processing Bar */}\n      <div className=\"w-1/2 h-4 border-2 border-white rounded-full overflow-hidden\">\n        <div\n          className=\"h-full bg-white transition-all duration-150\"\n          style={{ width: `${processing}%` }} // Set width dynamically\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingPage;\n"],"names":[],"mappings":";;;;;AAMA,MAAM,cAA0C,CAAC,EAAE,UAAU,EAAE;IAC7D,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAK,WAAU;0BAA2B;;;;;;0BAG3C,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,WAAU;oBACV,OAAO;wBAAE,OAAO,GAAG,WAAW,CAAC,CAAC;oBAAC;;;;;;;;;;;;;;;;;AAK3C;uCAEe"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///Users/domuki/Documents/Project/Selfware/src/components/StarBackground.tsx"],"sourcesContent":["// src/app/test/page.tsx\n\"use client\";\n\nimport { useEffect, useRef, useState } from \"react\";\n\nconst StarBackground: React.FC = () => {\n\n  const canvasRef = useRef<HTMLCanvasElement | null>(null); // Canvas reference\n  // Get CSS variables for background and foreground\n  const rootStyles = getComputedStyle(document.documentElement);\n  const background =\n    rootStyles.getPropertyValue(\"--background\").trim() || \"defaultBackground\"; // Fallback value\n  const foreground =\n    rootStyles.getPropertyValue(\"--foreground\").trim() || \"defaultForeground\"; // Fallback value\n  // Background animation (stars)\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n\n    const stars: { x: number; y: number; radius: number }[] = [];\n    const numStars = 200;\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    // Generate stars\n    for (let i = 0; i < numStars; i++) {\n      stars.push({\n        x: Math.random() * canvas.width,\n        y: Math.random() * canvas.height,\n        radius: Math.random() * 2,\n      });\n    }\n\n    const drawStars = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.fillStyle = foreground;\n      stars.forEach((star) => {\n        ctx.beginPath();\n        ctx.arc(star.x, star.y, star.radius, 0, Math.PI * 2);\n        ctx.fill();\n      });\n    };\n\n    const updateStars = () => {\n      stars.forEach((star) => {\n        star.y += 0.5;\n        if (star.y > canvas.height) {\n          star.y = 0;\n          star.x = Math.random() * canvas.width;\n        }\n      });\n    };\n\n    const animate = () => {\n      drawStars();\n      updateStars();\n      requestAnimationFrame(animate);\n    };\n\n    animate();\n\n    // Handle resizing\n    const handleResize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  return (\n    <>\n      <canvas\n        ref={canvasRef}\n        className=\"absolute top-0 left-0 w-full h-full -z-10\"\n      ></canvas>\n    </>\n  );\n};\n\nexport default StarBackground;\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;;AAGxB;AAFA;;;AAIA,MAAM,iBAA2B;IAE/B,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAA4B,OAAO,mBAAmB;IAC7E,kDAAkD;IAClD,MAAM,aAAa,iBAAiB,SAAS,eAAe;IAC5D,MAAM,aACJ,WAAW,gBAAgB,CAAC,gBAAgB,IAAI,MAAM,qBAAqB,iBAAiB;IAC9F,MAAM,aACJ,WAAW,gBAAgB,CAAC,gBAAgB,IAAI,MAAM,qBAAqB,iBAAiB;IAC9F,+BAA+B;IAE/B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,SAAS,UAAU,OAAO;QAChC,IAAI,CAAC,QAAQ;QAEb,MAAM,MAAM,OAAO,UAAU,CAAC;QAC9B,IAAI,CAAC,KAAK;QAEV,MAAM,QAAoD,EAAE;QAC5D,MAAM,WAAW;QAEjB,OAAO,KAAK,GAAG,OAAO,UAAU;QAChC,OAAO,MAAM,GAAG,OAAO,WAAW;QAElC,iBAAiB;QACjB,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,IAAK;YACjC,MAAM,IAAI,CAAC;gBACT,GAAG,KAAK,MAAM,KAAK,OAAO,KAAK;gBAC/B,GAAG,KAAK,MAAM,KAAK,OAAO,MAAM;gBAChC,QAAQ,KAAK,MAAM,KAAK;YAC1B;QACF;QAEA,MAAM,YAAY;YAChB,IAAI,SAAS,CAAC,GAAG,GAAG,OAAO,KAAK,EAAE,OAAO,MAAM;YAC/C,IAAI,SAAS,GAAG;YAChB,MAAM,OAAO,CAAC,CAAC;gBACb,IAAI,SAAS;gBACb,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,MAAM,EAAE,GAAG,KAAK,EAAE,GAAG;gBAClD,IAAI,IAAI;YACV;QACF;QAEA,MAAM,cAAc;YAClB,MAAM,OAAO,CAAC,CAAC;gBACb,KAAK,CAAC,IAAI;gBACV,IAAI,KAAK,CAAC,GAAG,OAAO,MAAM,EAAE;oBAC1B,KAAK,CAAC,GAAG;oBACT,KAAK,CAAC,GAAG,KAAK,MAAM,KAAK,OAAO,KAAK;gBACvC;YACF;QACF;QAEA,MAAM,UAAU;YACd;YACA;YACA,sBAAsB;QACxB;QAEA;QAEA,kBAAkB;QAClB,MAAM,eAAe;YACnB,OAAO,KAAK,GAAG,OAAO,UAAU;YAChC,OAAO,MAAM,GAAG,OAAO,WAAW;QACpC;QAEA,OAAO,gBAAgB,CAAC,UAAU;QAElC,OAAO;YACL,OAAO,mBAAmB,CAAC,UAAU;QACvC;IACF,GAAG,EAAE;IAEL,qBACE;kBACE,cAAA,8OAAC;YACC,KAAK;YACL,WAAU;;;;;;;AAIlB;uCAEe"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///Users/domuki/Documents/Project/Selfware/src/components/StarComponent.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"@/app/styles/star-styles.css\";\n\ninterface StarComponentProps {\n  lifePercentage: number; // Ensure this prop is defined\n  sizeChange: boolean;\n}\n\nconst StarComponent: React.FC<StarComponentProps> = ({\n  lifePercentage,\n  sizeChange,\n}) => {\n  const emoji = [\"▔＾▔\", \"▔▽▔\", \"▔皿▔\", \"▔︵▔\", \"▔ω▔\", \"▔﹏▔\"];\n  const starProperties = [\n    {\n      name: \"I: Protostar\",\n      color: \"rgba(222, 0, 0, 1)\", // Red\n      glow: `rgba(255, 100, 100, 0.5)`,\n      size: 150, // Small\n    },\n    {\n      name: \"II: Main sequence\",\n      color: \"rgba(222, 222, 0, 1)\", // Yellow\n      glow: `rgba(255, 255, 100, 0.5)`,\n      size: 250, // Medium\n    },\n    {\n      name: \"III: Red giant\",\n      color: \"rgba(222, 100, 100, 1)\", // Red\n      glow: `rgba(255, 100, 100, 0.5)`,\n      size: 500, // Very large\n    },\n    {\n      name: \"IV. White dwarf\",\n      color: \"rgba(200, 200, 255, 1)\", // Blue-white\n      glow: `rgba(200, 200, 255, 0.5)`,\n      size: 200, // Small\n    },\n    {\n      name: \"VI. Black dwarf\",\n      color: \"rgba(0, 0, 0, 1)\", // Black\n      glow: \"rgba(100, 100, 100, 1)\",\n      size: 150, // Smallest\n    },\n  ];\n\n  const getStarIndex = (percentage: number) => {\n    if (percentage > 75) return 0; // Protostar\n    else if (percentage > 50) return 1; // Main sequence\n    else if (percentage > 25) return 2; // Red giant\n    else if (percentage > 1) return 3; // White dwarf\n    else return 4; // Black dwarf\n  };\n\n  const currentStarProperties = starProperties[getStarIndex(lifePercentage)];\n\n  return (\n    <div\n      className=\"star w-10 h-10\"\n      style={\n        sizeChange\n          ? {\n              backgroundColor: currentStarProperties.color,\n              width: `${currentStarProperties.size}px`,\n              height: `${currentStarProperties.size}px`,\n            }\n          : {\n              backgroundColor: currentStarProperties.color,\n            }\n      }\n    >\n      {/* <div\n        className={`absolut emoji flex items-center justify-center w-full h-full`}\n        style={{ fontSize: `${currentStarProperties.size / 5}px` }}\n      >\n        <div className=\"mt-8\">▔＾▔</div>\n      </div> */}\n      <div\n        className=\"glow\"\n        style={{\n          backgroundColor: currentStarProperties.glow,\n          width: \"150%\", // Glow width\n          height: \"150%\", // Glow height\n          opacity: 0.5, // Set opacity\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default StarComponent;\n"],"names":[],"mappings":";;;;;;AAQA,MAAM,gBAA8C,CAAC,EACnD,cAAc,EACd,UAAU,EACX;IACC,MAAM,QAAQ;QAAC;QAAO;QAAO;QAAO;QAAO;QAAO;KAAM;IACxD,MAAM,iBAAiB;QACrB;YACE,MAAM;YACN,OAAO;YACP,MAAM,CAAC,wBAAwB,CAAC;YAChC,MAAM;QACR;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM,CAAC,wBAAwB,CAAC;YAChC,MAAM;QACR;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM,CAAC,wBAAwB,CAAC;YAChC,MAAM;QACR;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM,CAAC,wBAAwB,CAAC;YAChC,MAAM;QACR;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,MAAM;QACR;KACD;IAED,MAAM,eAAe,CAAC;QACpB,IAAI,aAAa,IAAI,OAAO,GAAG,YAAY;aACtC,IAAI,aAAa,IAAI,OAAO,GAAG,gBAAgB;aAC/C,IAAI,aAAa,IAAI,OAAO,GAAG,YAAY;aAC3C,IAAI,aAAa,GAAG,OAAO,GAAG,cAAc;aAC5C,OAAO,GAAG,cAAc;IAC/B;IAEA,MAAM,wBAAwB,cAAc,CAAC,aAAa,gBAAgB;IAE1E,qBACE,8OAAC;QACC,WAAU;QACV,OACE,aACI;YACE,iBAAiB,sBAAsB,KAAK;YAC5C,OAAO,GAAG,sBAAsB,IAAI,CAAC,EAAE,CAAC;YACxC,QAAQ,GAAG,sBAAsB,IAAI,CAAC,EAAE,CAAC;QAC3C,IACA;YACE,iBAAiB,sBAAsB,KAAK;QAC9C;kBASN,cAAA,8OAAC;YACC,WAAU;YACV,OAAO;gBACL,iBAAiB,sBAAsB,IAAI;gBAC3C,OAAO;gBACP,QAAQ;gBACR,SAAS;YACX;;;;;;;;;;;AAIR;uCAEe"}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["file:///Users/domuki/Documents/Project/Selfware/src/data/starProperties.ts"],"sourcesContent":["// src/data/starProperties.ts\n\nexport const starProperties = [\n    {\n      name: \"I: Protostar\",\n      color: \"rgba(255, 0, 0, 1)\", // Red\n      glow: \"rgba(255, 100, 100, 0.5)\",\n      size: \"100px\", // Small\n    },\n    {\n      name: \"II: Main sequence\",\n      color: \"rgba(255, 255, 0, 1)\", // Yellow\n      glow: \"rgba(255, 255, 100, 0.5)\",\n      size: \"200px\", // Medium\n    },\n    {\n      name: \"III: Red giant\",\n      color: \"rgba(255, 100, 100, 1)\", // Red\n      glow: \"rgba(255, 100, 100, 0.5)\",\n      size: \"400px\", // Very large\n    },\n    {\n      name: \"IV. White dwarf\",\n      color: \"rgba(200, 200, 255, 1)\", // Blue-white\n      glow: \"rgba(200, 200, 255, 0.5)\",\n      size: \"120px\", // Small\n    },\n    {\n      name: \"VI. Black dwarf\",\n      color: \"rgba(0, 0, 0, 1)\", // Black\n      glow: \"rgba(100, 100, 100, 1)\",\n      size: \"50px\", // Smallest\n    },\n  ];\n  "],"names":[],"mappings":"AAAA,6BAA6B;;;;AAEtB,MAAM,iBAAiB;IAC1B;QACE,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM;IACR;IACA;QACE,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM;IACR;IACA;QACE,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM;IACR;IACA;QACE,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM;IACR;IACA;QACE,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM;IACR;CACD"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file:///Users/domuki/Documents/Project/Selfware/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\n\nimport GlassWindow from \"@/components/GlassWindow\";\nimport LoadingCircle from \"@/components/LoadingCircle\";\nimport LoadingPage from \"@/components/LoadingPage\";\nimport LogoutButton from \"@/components/LogoutButton\";\nimport StarBackground from \"@/components/StarBackground\";\nimport StarComponent from \"@/components/StarComponent\";\nimport { starProperties } from \"@/data/starProperties\";\nimport UserClass from \"@/modules/UserClass\";\nimport React, { useState, useEffect, useRef } from \"react\";\n\nexport default function StarLifecycle() {\n  // States\n  const [isLoading, setIsLoading] = useState(true); // Loading state\n  const [userData, setUserData] = useState<UserClass>(); // User data\n  const [birthDate, setBirthDate] = useState(\"\"); // User's birth date\n  const [lifePercentage, setLifePercentage] = useState(100); // Remaining life percentage\n  const [elapsedTime, setElapsedTime] = useState(\"\"); // Dynamic timer\n  const [isWidgetOpen, setIsWidgetOpen] = useState(false); // Widget state\n  const [processing, setProcessing] = useState(0); \n\n  const [timeLeft, setTimeLeft] = useState<{\n    days: any;\n    hours: any;\n    minutes: any;\n    seconds: any;\n  }>();\n\n  const totalDays = 30000; // Assumed star lifespan in days\n\n  // Fetch user data from localStorage\n  // useEffect(() => {\n  //   const fetchUserData = () => {\n  //     try {\n  //       const storedData = localStorage.getItem(\"DATA:USER\");\n  //       if (storedData) {\n  //         const parsedData = JSON.parse(storedData);\n  //         console.log(parsedData);\n  //         setUserData(UserClass.fromJson(parsedData));\n  //       }\n  //     } catch (error) {}\n  //   };\n\n  //   setTimeout(fetchUserData, 1500); // Simulate 1-second loading time\n  // }, []);\n\n  useEffect(() => {\n    const fetchUserData = () => {\n      try {\n        const storedData = localStorage.getItem(\"DATA:USER\");\n        if (storedData) {\n          const parsedData = JSON.parse(storedData);\n          console.log(parsedData);\n          setUserData(UserClass.fromJson(parsedData));\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      } finally {\n        setIsLoading(false); // Stop loading after fetching data\n      }\n    };\n\n    // Simulate progress over 1500ms\n    const totalDuration = 1500; // Total time for loading (in ms)\n    const intervalDuration = 100; // Interval time for updating progress (in ms)\n    const increment = 100 / (totalDuration / intervalDuration); // Calculate increment per interval\n\n    const interval = setInterval(() => {\n      setProcessing((prev) => {\n        const nextValue = prev + increment;\n        if (nextValue >= 100) {\n          clearInterval(interval); // Stop interval when progress reaches 100%\n          return 100;\n        }\n        return nextValue;\n      });\n    }, intervalDuration);\n\n    // Fetch user data after 1500ms\n    const timeout = setTimeout(() => {\n      fetchUserData(); // Fetch user data\n    }, totalDuration);\n\n    // Cleanup intervals and timeouts on component unmount\n    return () => {\n      clearInterval(interval);\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  // Update birth date and loading state when user data is loaded\n  useEffect(() => {\n    if (userData) {\n      console.log(userData.toJson());\n      setBirthDate(userData.dateOfBirth || \"\");\n      setIsLoading(false); // Mark loading as complete\n    }\n  }, [userData]);\n\n  // Calculate remaining life percentage\n  useEffect(() => {\n    if (birthDate) {\n      const birth = new Date(birthDate);\n      const today = new Date();\n      const daysLived = Math.floor(\n        (today.getTime() - birth.getTime()) / (1000 * 60 * 60 * 24)\n      );\n      setElapsedTime(`${daysLived} Days`);\n      const remainingPercentage = Math.max(\n        0,\n        ((totalDays - daysLived) / totalDays) * 100\n      );\n      setLifePercentage(remainingPercentage);\n      console.log(\"remainingPercentage\", remainingPercentage);\n\n      const interval = setInterval(() => {\n        setTimeLeft(calculateTimeLeft());\n      }, 1); // Update every millisecond\n\n      return () => clearInterval(interval); // Cleanup on unmount\n    }\n  }, [birthDate]);\n\n  const calculateTimeLeft = () => {\n    const birthdate = new Date(birthDate);\n    const targetDate = new Date(\n      birthdate.getTime() + totalDays * 24 * 60 * 60 * 1000\n    ); // Add 30,000 days\n    const now = new Date();\n\n    const diff = targetDate.getTime() - now.getTime(); // Time difference in milliseconds\n\n    if (diff <= 0) {\n      return {\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n        milliseconds: 0,\n      };\n    }\n\n    const days = Math.floor(diff / (24 * 60 * 60 * 1000));\n    const hours = Math.floor((diff % (24 * 60 * 60 * 1000)) / (60 * 60 * 1000));\n    const minutes = Math.floor((diff % (60 * 60 * 1000)) / (60 * 1000));\n    const seconds = Math.floor((diff % (60 * 1000)) / 1000);\n    const time = { days, hours, minutes, seconds };\n    return time;\n  };\n\n  const formatTime = (time: {\n    days: any;\n    hours: any;\n    minutes: any;\n    seconds: any;\n  }) => {\n    const { days, hours, minutes, seconds } = time;\n\n    return `${days} ${String(hours).padStart(2, \"0\")}:${String(\n      minutes\n    ).padStart(2, \"0\")}:${String(seconds).padStart(2, \"0\")}`;\n  };\n\n  // Define the return type of the function\n  const getStarProperties = (lifePercentage: number) => {\n    if (lifePercentage > 75) {\n      return starProperties[0];\n    } else if (lifePercentage > 50) {\n      return starProperties[1];\n    } else if (lifePercentage > 25) {\n      return starProperties[2];\n    } else if (lifePercentage > 1) {\n      return starProperties[3];\n    } else {\n      return starProperties[4];\n    }\n  };\n\n  const prop = getStarProperties(lifePercentage);\n\n  // Loading screen\n  if (isLoading) {\n    return <LoadingPage processing={processing} />;\n  }\n\n  // Main content\n  else\n    return (\n      <div className=\"flex flex-col items-center justify-center\">\n        <StarBackground />\n        {/* Main content */}\n        <div className=\"flex flex-col h-screen w-full z-10 items-center justify-center text-center py-32\">\n          <p className=\"text-md mb-2\">\n            Number of days remaining before the star demise:\n          </p>\n          <h1 className=\"text-6xl text-yellow-500 font-bold mb-8 z-50\">\n            {timeLeft && `${formatTime(timeLeft)}`}\n          </h1>\n\n          <div\n            className=\"my-6 hover:cursor-pointer\"\n            onClick={() => setIsWidgetOpen(true)}\n          >\n            <StarComponent lifePercentage={lifePercentage} sizeChange={true} />\n          </div>\n\n          <p className=\"text-3xl mt-8\">Stage {prop.name}</p>\n          <p className=\"mt-4 text-lg\">\n            Remaining: {lifePercentage.toFixed(1)}%\n          </p>\n        </div>\n        <GlassWindow\n          isOpen={isWidgetOpen}\n          onClose={() => setIsWidgetOpen(false)}\n        >\n          <h2 className=\"text-2xl mb-8\">\n            Hello There,{\" \"}\n            <span className=\"text-yellow-500 font-bold\">\n              {userData?.username}\n            </span>\n          </h2>\n          <p>Email: {userData?.email}</p>\n          <p>Date of Birth: {birthDate.toString().split(\"T\")[0]}</p>\n          <p>Bio: {userData?.bio}</p>\n          <p className=\"text-sm mt-4\">\n            Your star has been running {elapsedTime}\n          </p>\n        </GlassWindow>\n      </div>\n    );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 630, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}